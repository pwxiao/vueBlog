import{_ as a,c as t,a2 as s,o}from"./chunks/framework.BQmytedh.js";const i="/assets/materialhomepage.Bfj_W3xC.png",c="/assets/clu1.DwQeyfD-.png",d="/assets/clu2.DlScHV4-.jpg",r="/assets/clu3.B2W36XjC.png",l="/assets/clu4.QTDZfbVY.png",p="/assets/clu5.C8cV3Ft6.png",n="/assets/clu6.CTGb4qLO.png",_=JSON.parse('{"title":"记一次有趣的经历","description":"","frontmatter":{"comments":true},"headers":[],"relativePath":"blog/letitsnow.md","filePath":"blog/letitsnow.md"}'),m={name:"blog/letitsnow.md"};function h(u,e,k,b,f,g){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="记一次有趣的经历" tabindex="-1">记一次有趣的经历 <a class="header-anchor" href="#记一次有趣的经历" aria-label="Permalink to &quot;记一次有趣的经历&quot;">​</a></h1><p>!!! 前言 这两天一直在用mkdocs建网站，上网四处找教程，很自然的我找到了mkdocs-material的官网 <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noreferrer">https://squidfunk.github.io/mkdocs-material/</a></p><p>主页如下图 <img src="'+i+'" alt=""></p><p>很明显这是典型的使用<code>mkdocs-material</code>主题生成的主页，但是吸引我注意的是主页的雪花特效，这是主页默认启动时无法显示的。</p><p>我很感兴趣，想知道这个雪花特效是怎么形成的。</p><p>歪打正着，我在页面随意收缩了一下<code>snow</code>这个单词，弹出的搜索结果如下图</p><p><img src="'+c+'" alt=""></p><p>上图显示<code>snow</code>这个关键字只在网站的changelog中出现过</p><p>后面有提示 <code>see https://twitter.com/squidfunk/status/1597939243090788352</code></p><p>于是我顺着这个链接打开了（推特链接，需要使用魔法） 链接将指向这个推文 <img src="'+d+'" alt=""></p><p>这是<code>mkdocs-material</code>作者squidfunk发布的一篇推文，他提到这个雪花特效已经内置在主题中，但是他将特效做成了一个彩蛋，默认不会打开，并希望邀请用户自己去发掘这个彩蛋。</p><p>顿时我发现，不经意的举动偶然让我参与了老外的一个游戏。</p><h1 id="解谜过程" tabindex="-1">解谜过程 <a class="header-anchor" href="#解谜过程" aria-label="Permalink to &quot;解谜过程&quot;">​</a></h1><h2 id="_0x0001-mkdocs-yml" tabindex="-1">0x0001 mkdocs.yml <a class="header-anchor" href="#_0x0001-mkdocs-yml" aria-label="Permalink to &quot;0x0001 mkdocs.yml&quot;">​</a></h2><p>因为这个主题是开源的，我很轻的找到了开源地址 <a href="https://github.com/squidfunk/mkdocs-material" target="_blank" rel="noreferrer">https://github.com/squidfunk/mkdocs-material</a></p><p>观察源代码文件不难看出，这个网站本身就是基于mkdcos-material开发的，在mkdocs主题中，最核心的文件是mkdocs.yml，页面的所有显示内容都是该文件说了算。</p><p>于是我打开了该文件<a href="https://github.com/squidfunk/mkdocs-material/blob/master/mkdocs.yml" target="_blank" rel="noreferrer">https://github.com/squidfunk/mkdocs-material/blob/master/mkdocs.yml</a>.</p><p>再仔细观察一番后没发现什么异样。由此可见不是该文件的问题</p><h2 id="_0x0002-index-md" tabindex="-1">0x0002 index.md <a class="header-anchor" href="#_0x0002-index-md" aria-label="Permalink to &quot;0x0002 index.md&quot;">​</a></h2><p>index.md是mkdocs站点的主页文件，我找到并进入<a href="https://github.com/squidfunk/mkdocs-material/blob/master/docs/index.md" target="_blank" rel="noreferrer">https://github.com/squidfunk/mkdocs-material/blob/master/docs/index.md</a>，文件很少,如下图</p><p><img src="'+r+'" alt=""></p><p>...并没发现什么异样</p><h2 id="_0x0003-f12开发者工具" tabindex="-1">0x0003 f12开发者工具 <a class="header-anchor" href="#_0x0003-f12开发者工具" aria-label="Permalink to &quot;0x0003 f12开发者工具&quot;">​</a></h2><p>源码中找不到线索，我来到站点打开了浏览器的开发者工具，对主页的雪花图标进行检查 <img src="'+l+'" alt=""> 元素指向了一个<code>button</code>,没啥异样 但是后面的<code>ᴴₒᴴₒᴴ</code> 吸引了注意，这个一个反复出现的字符，在上文说到的<code>index.md</code>中也出现了这个符号， 并且对应的布尔值是<code>false</code>,我立刻意识到，这也许就是雪花特效的开关，我来到网站主页，果然主页是没有雪花特效的，因此对应布尔值为<code>false</code>，这印证了我的猜想：<code>ᴴₒᴴₒᴴₒ</code>就是打开雪花特效的钥匙</p><p>但是知道这一点仍没有什么用，因为我在其他页面中没有发现</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ᴴₒᴴₒᴴₒ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p>这个属性，也就是说，<code>ᴴₒᴴₒᴴₒ</code>只是一个标志，在没有真正找到在哪启用时，无论怎么更改其属性值都是没用的。</p><h2 id="_0x0004-苦苦寻找" tabindex="-1">0x0004 苦苦寻找 <a class="header-anchor" href="#_0x0004-苦苦寻找" aria-label="Permalink to &quot;0x0004 苦苦寻找&quot;">​</a></h2><p>我又回到源码中仔细寻找，翻遍了与主页相关的css文件，仍没有进展，在快放弃之际，又是灵光一闪，我看到了一个<code>meta.yml</code>文件，在我的网站源码中我记得是没有这个文件的，于是我打开了他，一瞬间豁然开朗 <img src="'+p+'" alt=""></p><p>熟悉的符号，我立刻意识到，这就是开启雪花特效的钥匙。</p><p>于是我回到自己的网站源文件，在相同位置，新建了一个<code>meta.yml</code>文件，并写入<code>ᴴₒᴴₒᴴₒ = true</code></p><p>重新部署，芜湖，特效出来啦 <img src="'+n+'" alt=""></p><h2 id="解谜成功-o-〃-▽-〃-o" tabindex="-1">解谜成功 o(〃&#39;▽&#39;〃)o <a class="header-anchor" href="#解谜成功-o-〃-▽-〃-o" aria-label="Permalink to &quot;解谜成功 o(〃&#39;▽&#39;〃)o&quot;">​</a></h2>',33)]))}const q=a(m,[["render",h]]);export{_ as __pageData,q as default};
